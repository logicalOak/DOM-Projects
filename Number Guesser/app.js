/*
–ó–ê–î–ê–ß–ê –ò–ì–†–´:
- –ò–≥—Ä–æ–∫ –¥–æ–ª–∂–µ–Ω —É–≥–∞–¥–∞—Ç—å —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 10
- –ò–≥—Ä–æ–∫ –ø–æ–ª—É—á–∞–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–≥–∞–¥–æ–∫
- –£–≤–µ–¥–æ–º–∏—Ç—å –∏–≥—Ä–æ–∫–∞ –æ–± –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –¥–æ–≥–∞–¥–∫–∞—Ö
- –£–≤–µ–¥–æ–º–∏—Ç—å –∏–≥—Ä–æ–∫–∞ –æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –æ—Ç–≤–µ—Ç–µ
- –ü–æ–∑–≤–æ–ª–∏—Ç—å –∏–≥—Ä–æ–∫—É –≤—ã–±—Ä–∞—Ç—å –∏–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞
*/

class GuessNumber {
	constructor() {
		this.secretNumber = Math.floor(Math.random() * (10 - 0 + 1)) + 0; // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω–æ —á–∏—Å–ª–æ
		this.counter = 3; // –°—á–µ—Ç—á–∏–∫
		this.create(); // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞–∑–º–µ—Ç–∫–∏
		this.game(); // –§—É–Ω–∫—Ü–∏—è —Å –ª–æ–≥–∏–∫–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
		console.clear();
		console.log(`–ü—Å—Å, –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ - ${this.secretNumber}`); // –û—Ç–≤–µ—Ç –≤ –∫–æ–Ω—Å–æ–ª–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
	}

	// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏ –ø–æ–∫–∞–∑ —Å–æ–æ–±—â–µ–Ω–∏–π
	message(type = "", text = "", input = "") {
		const message = document.querySelector(".app__message");
		let time;
		message.textContent = text;
		message.classList.add("show");

		switch (type) {
			case "error":
				message.classList.add("error");
				input.classList.add("error");
				time = 5000;
				break;

			case "success":
				message.classList.add("success");
				time = 20000;
				break;

			default:
				break;
		}

		setTimeout(() => {
			message.classList.remove("error", "success", "show");
			input.classList.remove("error");
		}, time);
	}

	// –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏
	game() {
		const form = document.querySelector(".app__form");
		const messageArea = document.querySelector(".app__message");

		form.addEventListener("submit", (e) => {
			e.preventDefault();
			const self = e.currentTarget;
			const field = self.guess;
			const value = Number(field.value);

			if (isNaN(value) || value < 0 || value > 10) {
				this.message(
					"error",
					"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—É –æ—Ç 0 –¥–æ 10!",
					field
				);
			} else {
				if (value === this.secretNumber) {
					this.message("success", "–í—ã —É–≥–∞–¥–∞–ª–∏ üëå!", field);
					field.remove();
					messageArea.insertAdjacentHTML(
						"afterend",
						`<button class="app__play">–ò–≥—Ä–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞?</button>`
					);
					this.replay();
				}

				if (value !== this.secretNumber) {
					this.counter--;
					if (this.counter === 0) {
						form.reset();
						field.remove();
						messageArea.insertAdjacentHTML(
							"afterend",
							`<p class="app__message error">–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª üòú! –ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ - ${this.secretNumber}</p>
						<button class="app__play">–ò–≥—Ä–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞?</button>`
						);
						this.replay();
					} else {
						this.message(
							"error",
							`–ú–∏–º–æ! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞. –ü–æ–ø—ã—Ç–æ–∫ –æ—Å—Ç–∞–ª–æ—Å—å ${this.counter}`,
							field
						);
						form.reset();
					}
				}
			}
		});
	}

	// –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
	replay() {
		const button = document.querySelector(".app__play");
		if (button) {
			button.addEventListener("click", () => location.reload());
		}
	}

	// –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ç–∫–∏
	create() {
		const app = document.querySelector("#app");
		app.innerHTML = `
		<h2 class="app__title">–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ</h2>
		<p class="app__description">
			–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ - –∏–≥—Ä–∞, –≤ –∫–æ—Ç–æ—Ä–æ–π –≤—ã –¥–æ–ª–∂–Ω—ã —É–≥–∞–¥–∞—Ç—å —á–∏—Å–ª–æ, –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–º –º–µ–∂–¥—É –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º –æ—Ç 0 –¥–æ 10. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–∞–∫ –º–æ–∂–Ω–æ –º–µ–Ω—å—à–µ –ø–æ–ø—ã—Ç–æ–∫. –£–¥–∞—á–∏!</p>
		<form class="app__form">
			<input type="number" class="app__input" name="guess" placeholder="–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ">
		</form>
		<p class="app__message hide"></p>
		`;
	}
}

// –ù–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞
new GuessNumber();
